import java.util.Arrays;
import java.util.Comparator;

class Job {
    int start;
    int end;
    int profit;

    public Job(int start, int end, int profit) {
        this.start = start;
        this.end = end;
        this.profit = profit;
    }

    public int getStart() {
        return start;
    }

    public int getEnd() {
        return end;
    }

    public int getProfit() {
        return profit;
    }
}
public class JobSchedule {
    //(1,3,5) (2,5,6) (4,6,5) (6,7,4) (5,8,11) (7,9,2)
    public static void main(String[] args) {
        Job[] jobs = new Job[6];
        jobs[0] = new Job(1,3,5);
        jobs[1] = new Job(2,5,6);
        jobs[2] = new Job(4,6,5);
        jobs[3] = new Job(6,7,4);
        jobs[4] = new Job(5,8,11);
        jobs[5] = new Job(7,9,2);
        Arrays.sort(jobs, Comparator.comparingInt(Job::getEnd));
        int i=1, j=0, k=0, maxProfit=0;
        int[] temp = new int[jobs.length];
        for(Job job : jobs) {
            temp[k] = job.getProfit();
            k++;
        }
        while (i < jobs.length) {
            if(!isOverlapped(jobs[j], jobs[i])) {
                temp[i] = Math.max(temp[i], temp[j]+jobs[i].getProfit());
                maxProfit = Math.max(maxProfit, temp[i]);
            }
            j++;
            if(i == j) {
                j=0;
                i=i+1;
            }
        }
        System.out.println("Max profit: " + maxProfit);
    }

    private static boolean isOverlapped(Job job1, Job job2) {
        return (job1.getStart() < job2.getEnd()) && (job2.getStart() < job1.getEnd());
    }
}
